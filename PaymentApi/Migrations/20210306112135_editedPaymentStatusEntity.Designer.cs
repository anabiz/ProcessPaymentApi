// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentApi.Data;

namespace PaymentApi.Migrations
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20210306112135_editedPaymentStatusEntity")]
    partial class editedPaymentStatusEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("PaymentApi.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardHolder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityCode")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PaymentApi.Entities.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("status")
                        .HasColumnType("TEXT");

                    b.HasKey("PaymentId");

                    b.ToTable("paymentStatuses");
                });

            modelBuilder.Entity("PaymentApi.Entities.PaymentStatus", b =>
                {
                    b.HasOne("PaymentApi.Entities.Payment", "payment")
                        .WithOne("PaymentState")
                        .HasForeignKey("PaymentApi.Entities.PaymentStatus", "PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("payment");
                });

            modelBuilder.Entity("PaymentApi.Entities.Payment", b =>
                {
                    b.Navigation("PaymentState");
                });
#pragma warning restore 612, 618
        }
    }
}
